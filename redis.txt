redis    （看了redis 实战  笔记）


redis有五种数据结构
string(字符串)  list(列表)  set(集合)  hash(散列)  zset(有序集合)


zinterstore命令  
zinterstore destination numkeys key1 [key2…] [weights weight1 [weight2…]] [aggregate sum/min/max]  （求 key1, key2 的交集，key1, key2 的权重分别是 weight1, weight2。
聚合的方法有：sum/min/max。
聚合的结果保存在 destination 中。）
这个命令可以求set 和 zset 的集合  排序有用


！分布式锁
使用redis 做分布式锁
分布式锁本质上要实现的目标就是在 Redis 里面占一个“茅坑”，当别的进程也要来占时，发现已经有人蹲在那里了，就只好放弃或者稍后再试。
占坑一般是使用 setnx(set if not exists) 指令，只允许被一个客户端占坑。先来先占， 用完了，再调用 del 指令释放茅坑。

！位图bitmap

!HyperLogLog
数据结构用来解决这种统计问题
解决很多精确度不高的统计需求
标准误差是 0.81%，这样的精确度已经可以满足上面的 UV 统计需求了

！布隆过滤器
它就是专门用来解决这种去重问题的。它在起到去重的同时，在空间上还能节省 90% 以上，只是稍微有那么点不精确，也就是有一定的误判概率







